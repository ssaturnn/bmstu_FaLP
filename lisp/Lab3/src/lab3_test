(defun square_equation(a b c)
    (let* ((d (- (* b b) (* 4 a c)))
        (sqrtd (sqrt (abs d))))
    (cond ((= (+ (abs a) (abs b)) 0) 
        (cond ((= c 0) 'Any_x)
                (T 'not_solved)))
        ((= a 0) (cons (* -1 (/ c b)) (cons 'This_is_not_square_equation nil)))
        ((>= d 0) (cons (/ (+ (* -1 b) sqrtd) (* 2 a))
                            (cons (/ (- (* -1 b) sqrtd) (* 2 a)) nil)))
        ((< d 0) (cons 
                            (cons (/ (* -1 b) (* 2 a)) (/ sqrtd (* 2 a)))
                            (cons 
                                (cons (/ (* -1 b) (* 2 a)) (/ (* -1 sqrtd) (* 2 a))) 
                                nil))))))
